@page "/activity-logs"

@inject BikeSparesInventorySystem.Data.Repositories.Repository<ActivityLog> ActivityLogRepository;
@inject BikeSparesInventorySystem.Data.Repositories.Repository<Spare> SpareRepository;
@inject BikeSparesInventorySystem.Data.Repositories.Repository<User> UserRepository;
@inject BikeSparesInventorySystem.Data.Services.AuthService AuthService

@inject ISnackbar Snackbar
@inject IDialogService DialogService;

<MudTable
    @ref="@ActivityLogsTable" 
    Elevation="0" 
    Items="@Elements" 
    FixedHeader="@Fixed_header" 
    FixedFooter="@Fixed_footer" 
    Height="@(Fixed_header || Fixed_footer ? "calc(100vh - 64px - 64px - 64px)" : "")" 
    Dense="@Dense" 
    Hover="@Hover" 
    ReadOnly="@ReadOnly" 
    Filter="new Func<ActivityLog,bool>(FilterFunc)"
        SortLabel="Sort By"
        RowsPerPage="20"
        HorizontalScrollbar="true" >
    <ToolBarContent>
        @if (GlobalState.IsUserAdmin)
        {
            <MudStack Row="true">
                <ImportButton T="ActivityLog" />
                <ExportButton T="ActivityLog" />
            </MudStack>
        }
        <MudSpacer />
        <MudStack Row="true">
            <MudTextField @bind-Value="searchString" Label="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Class="mt-0" Clearable="true"></MudTextField>
            <MudTextField T="string" Class="mt-0" Label="Filter by Month" InputType="InputType.Month" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.FilterAlt" ValueChanged="(a) => Onchanged(a)" />
        </MudStack>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.Id)">ID</MudTableSortLabel></MudTh>
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.SpareID)">Spare</MudTableSortLabel></MudTh>
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.Quantity)">Quantity</MudTableSortLabel></MudTh>
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.Action)">Action</MudTableSortLabel></MudTh>
        @if (GlobalState.IsUserAdmin)
        {
            <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.ActedBy)">Acted By</MudTableSortLabel></MudTh>
        }
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.ActionOn)">On</MudTableSortLabel></MudTh>
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.ApprovalStatus)">Approval Status</MudTableSortLabel></MudTh>
        @if (GlobalState.IsUserAdmin)
        {
            <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.Approver)">Approver</MudTableSortLabel></MudTh>
        }
        <MudTh Style="white-space: nowrap;"><MudTableSortLabel SortBy="new Func<ActivityLog, object>(x=>x.ApprovalStatusOn)">On</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID"><MudChip>@context.Id</MudChip></MudTd>
        <MudTd DataLabel="Spare">
            <SpareChip SpareName="@GetSpareName(context.SpareID)" />
        </MudTd>
        <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
        <MudTd DataLabel="Action">
            @switch (@context.Action)
            {
                case StockAction.Add:
                    <MudTooltip Text = "Add">
                        <MudIcon Color="Color.Primary" Icon="@Icons.Filled.Add" />
                    </MudTooltip>
                    break;
                case StockAction.Deduct:
                    <MudTooltip Text="Deduct">
                        <MudIcon Color="Color.Secondary" Icon="@Icons.Filled.Remove" />
                    </MudTooltip>
                    break;               
            }            
        </MudTd>
        @if (GlobalState.IsUserAdmin)
        {
            <MudTd DataLabel="Acted By"><UserChip user="GetUser(context.ActedBy)"/></MudTd>
        }
        <MudTd Style="white-space: nowrap;" DataLabel="Action On">@context.ActionOn</MudTd>
        <MudTd DataLabel="Is Approved">
            @switch (@context.ApprovalStatus)
            {
                case ApprovalStatus.Approve:
                    <MudTooltip Text = "Approved">
                        <MudIcon Color="Color.Success" Icon="@Icons.Filled.Check" />
                    </MudTooltip>
                    break;
                case ApprovalStatus.Disapprove:
                    <MudTooltip Text="Disapproved">
                        <MudIcon Color="Color.Error" Icon="@Icons.Filled.Close" />
                    </MudTooltip>
                    break;
                case ApprovalStatus.Pending:
                    <MudTooltip Text = "Pending">
                        <MudIcon Color="Color.Warning" Icon="@Icons.Filled.HourglassTop" />
                    </MudTooltip>
                    break;
            }
        </MudTd>
        @if (GlobalState.IsUserAdmin)
        {
            <MudTd DataLabel="Approved By">@if (context.ApprovalStatus == ApprovalStatus.Pending)
                {
                    <ApproveButton ActivityLogID="@context.Id"/>
                }
                else
                {
                    <UserChip user="GetUser(context.Approver)" />
                }
            </MudTd>
        }
        <MudTd Style="white-space: nowrap;" DataLabel="Approval Status On">@if (@context.ApprovalStatusOn == default)
            {
                @("N/A")
            } else
            {
                @context.ApprovalStatusOn
            }
        </MudTd>

    </RowTemplate>    
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 20, 45, 65, 100}" />
    </PagerContent>
</MudTable>